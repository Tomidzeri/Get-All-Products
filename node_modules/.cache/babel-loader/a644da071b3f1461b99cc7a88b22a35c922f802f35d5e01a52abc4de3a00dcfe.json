{"ast":null,"code":"const [sortingOption, setSortingOption] = useState(\"\"); // Track the selected sorting option\nconst [sortingOrder, setSortingOrder] = useState(\"ascending\"); // Track the sorting order\n\nconst dispatch = useDispatch();\nconst handleSort = option => {\n  if (option === sortingOption) {\n    setSortingOrder(prevSortingOrder => prevSortingOrder === \"ascending\" ? \"descending\" : \"ascending\");\n  } else {\n    setSortingOrder(\"ascending\");\n  }\n  setSortingOption(option);\n  const sortedProducts = [...products];\n  if (option === \"price\") {\n    sortedProducts.sort((a, b) => {\n      const sortOrderMultiplier = sortingOrder === \"ascending\" ? 1 : -1;\n      return sortOrderMultiplier * (parseFloat(a.price) - parseFloat(b.price));\n    });\n  } else if (option === \"title\") {\n    sortedProducts.sort((a, b) => {\n      const sortOrderMultiplier = sortingOrder === \"ascending\" ? 1 : -1;\n      return sortOrderMultiplier * a.title.localeCompare(b.title);\n    });\n  }\n  dispatch({\n    type: \"UPDATE_PRODUCTS\",\n    payload: sortedProducts\n  });\n};\nexport default handleSort;","map":{"version":3,"names":["sortingOption","setSortingOption","useState","sortingOrder","setSortingOrder","dispatch","useDispatch","handleSort","option","prevSortingOrder","sortedProducts","products","sort","a","b","sortOrderMultiplier","parseFloat","price","title","localeCompare","type","payload"],"sources":["C:/Users/Admin/Desktop/01-starting-project/src/components/sorting.js"],"sourcesContent":["const [sortingOption, setSortingOption] = useState(\"\"); // Track the selected sorting option\r\n  const [sortingOrder, setSortingOrder] = useState(\"ascending\"); // Track the sorting order\r\n\r\n  const dispatch = useDispatch();\r\n\r\nconst handleSort = (option) => {\r\n    if (option === sortingOption) {\r\n      setSortingOrder((prevSortingOrder) =>\r\n        prevSortingOrder === \"ascending\" ? \"descending\" : \"ascending\"\r\n      );\r\n    } else {\r\n      setSortingOrder(\"ascending\"); \r\n    }\r\n\r\n    setSortingOption(option);\r\n\r\n    const sortedProducts = [...products];\r\n    if (option === \"price\") {\r\n      sortedProducts.sort((a, b) => {\r\n        const sortOrderMultiplier = sortingOrder === \"ascending\" ? 1 : -1;\r\n        return sortOrderMultiplier * (parseFloat(a.price) - parseFloat(b.price));\r\n      });\r\n    } else if (option === \"title\") {\r\n      sortedProducts.sort((a, b) => {\r\n        const sortOrderMultiplier = sortingOrder === \"ascending\" ? 1 : -1;\r\n        return sortOrderMultiplier * a.title.localeCompare(b.title);\r\n      });\r\n    }\r\n    dispatch({ type: \"UPDATE_PRODUCTS\", payload: sortedProducts });\r\n  };\r\n\r\n  export default handleSort;"],"mappings":"AAAA,MAAM,CAACA,aAAa,EAAEC,gBAAgB,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;AACtD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGF,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;;AAE/D,MAAMG,QAAQ,GAAGC,WAAW,CAAC,CAAC;AAEhC,MAAMC,UAAU,GAAIC,MAAM,IAAK;EAC3B,IAAIA,MAAM,KAAKR,aAAa,EAAE;IAC5BI,eAAe,CAAEK,gBAAgB,IAC/BA,gBAAgB,KAAK,WAAW,GAAG,YAAY,GAAG,WACpD,CAAC;EACH,CAAC,MAAM;IACLL,eAAe,CAAC,WAAW,CAAC;EAC9B;EAEAH,gBAAgB,CAACO,MAAM,CAAC;EAExB,MAAME,cAAc,GAAG,CAAC,GAAGC,QAAQ,CAAC;EACpC,IAAIH,MAAM,KAAK,OAAO,EAAE;IACtBE,cAAc,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC5B,MAAMC,mBAAmB,GAAGZ,YAAY,KAAK,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC;MACjE,OAAOY,mBAAmB,IAAIC,UAAU,CAACH,CAAC,CAACI,KAAK,CAAC,GAAGD,UAAU,CAACF,CAAC,CAACG,KAAK,CAAC,CAAC;IAC1E,CAAC,CAAC;EACJ,CAAC,MAAM,IAAIT,MAAM,KAAK,OAAO,EAAE;IAC7BE,cAAc,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC5B,MAAMC,mBAAmB,GAAGZ,YAAY,KAAK,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC;MACjE,OAAOY,mBAAmB,GAAGF,CAAC,CAACK,KAAK,CAACC,aAAa,CAACL,CAAC,CAACI,KAAK,CAAC;IAC7D,CAAC,CAAC;EACJ;EACAb,QAAQ,CAAC;IAAEe,IAAI,EAAE,iBAAiB;IAAEC,OAAO,EAAEX;EAAe,CAAC,CAAC;AAChE,CAAC;AAED,eAAeH,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}