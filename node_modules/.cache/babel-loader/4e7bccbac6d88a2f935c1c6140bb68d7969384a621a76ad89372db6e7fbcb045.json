{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter, Route } from \"react-router-dom\"; // Import BrowserRouter and Route\n\nimport ProductDetails from \"./components/productDetails\";\nimport AddProductForm from \"./forms/AddProductForm\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  function fetchProductsHandler() {\n    setLoading(true);\n    fetch(\"https://dummyjson.com/products/\").then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    }).then(data => {\n      const transformedDetails = data.products.map(detailData => ({\n        id: detailData.id,\n        title: detailData.title,\n        brand: detailData.brand,\n        desc: detailData.description,\n        price: detailData.price + \"$\"\n      }));\n      dispatch({\n        type: \"UPDATE_PRODUCTS\",\n        payload: transformedDetails\n      });\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching product details:\", error);\n      setLoading(false);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(AddProductForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchProductsHandler,\n            children: \"Fetch Products and It's Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(ProductDetails, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sKyeo5OvQCyvMwDC72axs3+148I=\", false, function () {\n  return [useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useDispatch","BrowserRouter","Route","ProductDetails","AddProductForm","jsxDEV","_jsxDEV","App","_s","loading","setLoading","dispatch","fetchProductsHandler","fetch","then","response","ok","Error","json","data","transformedDetails","products","map","detailData","id","title","brand","desc","description","price","type","payload","catch","error","console","children","Fragment","path","exact","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/01-starting-project/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter, Route } from \"react-router-dom\"; // Import BrowserRouter and Route\n\nimport ProductDetails from \"./components/productDetails\";\nimport AddProductForm from \"./forms/AddProductForm\";\nimport \"./App.css\";\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  function fetchProductsHandler() {\n    setLoading(true);\n\n    fetch(\"https://dummyjson.com/products/\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        const transformedDetails = data.products.map((detailData) => ({\n          id: detailData.id,\n          title: detailData.title,\n          brand: detailData.brand,\n          desc: detailData.description,\n          price: detailData.price + \"$\",\n        }));\n\n        dispatch({ type: \"UPDATE_PRODUCTS\", payload: transformedDetails });\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching product details:\", error);\n        setLoading(false);\n      });\n  }\n\n  return (\n    <BrowserRouter>\n      {/* Wrap the components inside BrowserRouter */}\n      <React.Fragment>\n        {/* Define your routes using Route component */}\n        <Route path=\"/\" exact>\n          <section>\n            <AddProductForm />\n            <button onClick={fetchProductsHandler}>Fetch Products and It's Details</button>\n          </section>\n          <section>{loading ? <p>Loading...</p> : <ProductDetails />}</section>\n        </Route>\n        {/* Define other routes here if needed */}\n        {/* <Route path=\"/about\" component={AboutComponent} /> */}\n      </React.Fragment>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa,EAAEC,KAAK,QAAQ,kBAAkB,CAAC,CAAC;;AAEzD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,SAASY,oBAAoBA,CAAA,EAAG;IAC9BF,UAAU,CAAC,IAAI,CAAC;IAEhBG,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACd,MAAMC,kBAAkB,GAAGD,IAAI,CAACE,QAAQ,CAACC,GAAG,CAAEC,UAAU,KAAM;QAC5DC,EAAE,EAAED,UAAU,CAACC,EAAE;QACjBC,KAAK,EAAEF,UAAU,CAACE,KAAK;QACvBC,KAAK,EAAEH,UAAU,CAACG,KAAK;QACvBC,IAAI,EAAEJ,UAAU,CAACK,WAAW;QAC5BC,KAAK,EAAEN,UAAU,CAACM,KAAK,GAAG;MAC5B,CAAC,CAAC,CAAC;MAEHlB,QAAQ,CAAC;QAAEmB,IAAI,EAAE,iBAAiB;QAAEC,OAAO,EAAEX;MAAmB,CAAC,CAAC;MAClEV,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDsB,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvDvB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN;EAEA,oBACEJ,OAAA,CAACL,aAAa;IAAAkC,QAAA,eAEZ7B,OAAA,CAACR,KAAK,CAACsC,QAAQ;MAAAD,QAAA,eAEb7B,OAAA,CAACJ,KAAK;QAACmC,IAAI,EAAC,GAAG;QAACC,KAAK;QAAAH,QAAA,gBACnB7B,OAAA;UAAA6B,QAAA,gBACE7B,OAAA,CAACF,cAAc;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClBpC,OAAA;YAAQqC,OAAO,EAAE/B,oBAAqB;YAAAuB,QAAA,EAAC;UAA+B;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC,eACVpC,OAAA;UAAA6B,QAAA,EAAU1B,OAAO,gBAAGH,OAAA;YAAA6B,QAAA,EAAG;UAAU;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,gBAAGpC,OAAA,CAACH,cAAc;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEpB;AAAClC,EAAA,CAjDQD,GAAG;EAAA,QAEOP,WAAW;AAAA;AAAA4C,EAAA,GAFrBrC,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}