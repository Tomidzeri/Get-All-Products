{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\n// import AdditionalProductDetailsPage from \"./components/AdditionalProductDetailPage\";\n// import ProductDetails from \"./components/productDetails\";\n// import AddProductForm from \"./forms/AddProductForm\";\n// import \"./App.css\";\n\n// function App() {\n//   const [loading, setLoading] = useState(false);\n//   const dispatch = useDispatch();\n\n//   function fetchProductsHandler() {\n//     setLoading(true);\n\n//     fetch(\"https://dummyjson.com/products/\")\n//       .then((response) => {\n//         if (!response.ok) {\n//           throw new Error(\"Network response was not ok\");\n//         }\n//         return response.json();\n//       })\n//       .then((data) => {\n//         const transformedDetails = data.products.map((detailData) => ({\n//           id: detailData.id,\n//           title: detailData.title,\n//           thumbnail: detailData.thumbnail,\n//           desc: detailData.description,\n//           price: detailData.price + \"$\",\n//         }));\n\n//         dispatch({ type: \"UPDATE_PRODUCTS\", payload: transformedDetails });\n//         setLoading(false);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching product details:\", error);\n//         setLoading(false);\n//       });\n//   }\n\n//   return (\n//     <BrowserRouter>\n//       <React.Fragment>\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <ProductListPage\n//                 fetchProductsHandler={fetchProductsHandler}\n//                 loading={loading}\n//               />\n//             }\n//           />\n//           <Route\n//             path=\"/product/:id\"\n//             element={<AdditionalProductDetailsPage />}\n//           />\n//           <Route path=\"/product/add\" element={<AddProductForm />} />\n//         </Routes>\n//       </React.Fragment>\n//     </BrowserRouter>\n//   );\n// }\n\n// function ProductListPage({ fetchProductsHandler, loading }) {\n//   return (\n//     <section>\n//       <section className=\"buttons\">\n//         <AddProductForm />\n//         <button onClick={fetchProductsHandler}>\n//           Fetch Products and Its Details\n//         </button>\n//       </section>\n\n//       <section className=\"loading\">\n//         {loading ? <p>Loading...</p> : <ProductDetails />}\n//       </section>\n//     </section>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/Admin/Desktop/01-starting-project/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\n// import AdditionalProductDetailsPage from \"./components/AdditionalProductDetailPage\";\n// import ProductDetails from \"./components/productDetails\";\n// import AddProductForm from \"./forms/AddProductForm\";\n// import \"./App.css\";\n\n// function App() {\n//   const [loading, setLoading] = useState(false);\n//   const dispatch = useDispatch();\n\n//   function fetchProductsHandler() {\n//     setLoading(true);\n\n//     fetch(\"https://dummyjson.com/products/\")\n//       .then((response) => {\n//         if (!response.ok) {\n//           throw new Error(\"Network response was not ok\");\n//         }\n//         return response.json();\n//       })\n//       .then((data) => {\n//         const transformedDetails = data.products.map((detailData) => ({\n//           id: detailData.id,\n//           title: detailData.title,\n//           thumbnail: detailData.thumbnail,\n//           desc: detailData.description,\n//           price: detailData.price + \"$\",\n//         }));\n\n//         dispatch({ type: \"UPDATE_PRODUCTS\", payload: transformedDetails });\n//         setLoading(false);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching product details:\", error);\n//         setLoading(false);\n//       });\n//   }\n\n//   return (\n//     <BrowserRouter>\n//       <React.Fragment>\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <ProductListPage\n//                 fetchProductsHandler={fetchProductsHandler}\n//                 loading={loading}\n//               />\n//             }\n//           />\n//           <Route\n//             path=\"/product/:id\"\n//             element={<AdditionalProductDetailsPage />}\n//           />\n//           <Route path=\"/product/add\" element={<AddProductForm />} />\n//         </Routes>\n//       </React.Fragment>\n//     </BrowserRouter>\n//   );\n// }\n\n// function ProductListPage({ fetchProductsHandler, loading }) {\n//   return (\n//     <section>\n//       <section className=\"buttons\">\n//         <AddProductForm />\n//         <button onClick={fetchProductsHandler}>\n//           Fetch Products and Its Details\n//         </button>\n//       </section>\n\n//       <section className=\"loading\">\n//         {loading ? <p>Loading...</p> : <ProductDetails />}\n//       </section>\n//     </section>\n//   );\n// }\n\n// export default App;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}